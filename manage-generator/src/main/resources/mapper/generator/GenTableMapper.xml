<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gong.generator.mapper.GenTableMapper">
    
    <sql id="TableColumns">
        table_name,
        table_comment,
        create_time,
        update_time
    </sql>

    <sql id="selectGenTableVo">
        select table_id, table_name, table_comment, class_name, package_name, module_name, business_name, function_name, function_author, gen_type, gen_path, remark, create_time, update_time from gen_table
    </sql>

    <!--  information_schema 查询表信息列表  -->
   <select id="selectTableList" resultType="com.gong.generator.entity.GenTable" parameterType="com.gong.generator.entity.GenTable">
       SELECT
       <include refid="TableColumns" />
       FROM
       information_schema.tables
       WHERE
       table_name NOT LIKE 'gen_%'
       AND table_name NOT IN (select table_name from gen_table)
       AND table_schema = (select database())
       <if test="tableName != null and tableName.trim() != ''">
           AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
       </if>
       <if test="beginTime != null and endTime != null">
           AND login_time BETWEEN DATE_FORMAT(#{beginTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d')
       </if>
       order by create_time desc
   </select>

    <!--  information_schema 通过表名查找  -->
    <select id="selectTableByTableName" resultType="com.gong.generator.entity.GenTable">
        SELECT
        <include refid="TableColumns" />
        FROM
        information_schema.tables
        WHERE
        table_name = #{tableName}
        AND table_schema = (select database())
    </select>

    <!--  information_schema 通过表名查找  -->
    <select id="selectTableByTableNames" resultType="com.gong.generator.entity.GenTable" parameterType="list">
        SELECT
        <include refid="TableColumns" />
        FROM
        information_schema.tables
        WHERE
        table_name IN
        <foreach collection="tableNames" open="(" close=")" item="name" separator=",">
            #{name}
        </foreach>
        AND table_schema = (select database())
    </select>

    <!-- 从表中查询所有导入的表信息 -->
    <select id="selectGenTableList" resultType="com.gong.generator.entity.GenTable" parameterType="com.gong.generator.entity.GenTable">
        <include refid="selectGenTableVo"/>
        <where>
            <if test="tableName != null and tableName != ''">
                AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
            </if>
            <if test="tableComment != null and tableComment != ''">
                AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
            </if>
            <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
            </if>
            <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
                AND date_format(create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
            </if>
        </where>
    </select>

    <select id="selectGenTableByTableId" resultType="com.gong.generator.entity.GenTable">
        <include refid="selectGenTableVo" />
        where table_id = #{tableId}
    </select>

    <insert id="insertGenTable" parameterType="GenTable" useGeneratedKeys="true" keyProperty="tableId" >
        insert into gen_table (
        <trim suffixOverrides=",">
            <if test="tableName != null">table_name,</if>
            <if test="tableComment != null and tableComment != ''">table_comment,</if>
            <if test="className != null and className != ''">class_name,</if>
            <if test="packageName != null and packageName != ''">package_name,</if>
            <if test="moduleName != null and moduleName != ''">module_name,</if>
            <if test="businessName != null and businessName != ''">business_name,</if>
            <if test="functionName != null and functionName != ''">function_name,</if>
            <if test="functionAuthor != null and functionAuthor != ''">function_author,</if>
            <if test="genType != null and genType != ''">gen_type,</if>
            <if test="genPath != null and genPath != ''">gen_path,</if>
            <if test="remark != null and remark != ''">remark,</if>
        </trim>
        )values(
        <trim suffixOverrides=",">
            <if test="tableName != null">#{tableName},</if>
            <if test="tableComment != null and tableComment != ''">#{tableComment},</if>
            <if test="className != null and className != ''">#{className},</if>
            <if test="packageName != null and packageName != ''">#{packageName},</if>
            <if test="moduleName != null and moduleName != ''">#{moduleName},</if>
            <if test="businessName != null and businessName != ''">#{businessName}, </if>
            <if test="functionName != null and functionName != ''">#{functionName}, </if>
            <if test="functionAuthor != null and functionAuthor != ''">#{functionAuthor}, </if>
            <if test="genType != null and genType != ''">#{genType}, </if>
            <if test="genPath != null and genPath != ''">#{genPath}, </if>
            <if test="remark != null and remark != ''">#{remark}, </if>
        </trim>
        )
    </insert>


    <update id="updateGenTable" parameterType="GenTable">
        update gen_table
        <set>
            <if test="tableName != null">table_name = #{tableName},</if>
            <if test="tableComment != null and tableComment != ''">table_comment = #{tableComment},</if>
            <if test="className != null and className != ''">class_name = #{className},</if>
            <if test="functionAuthor != null and functionAuthor != ''">function_author = #{functionAuthor},</if>
            <if test="genType != null and genType != ''">gen_type = #{genType},</if>
            <if test="genPath != null and genPath != ''">gen_path = #{genPath},</if>
            <if test="packageName != null and packageName != ''">package_name = #{packageName},</if>
            <if test="moduleName != null and moduleName != ''">module_name = #{moduleName},</if>
            <if test="businessName != null and businessName != ''">business_name = #{businessName},</if>
            <if test="functionName != null and functionName != ''">function_name = #{functionName},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where table_id = #{tableId}
    </update>

    <delete id="deleteGenTableByTableIds">
        delete from gen_table where table_id in
        <foreach collection="tableIds" item="tableId" open="(" separator="," close=")">
            #{tableId}
        </foreach>
    </delete>

</mapper>